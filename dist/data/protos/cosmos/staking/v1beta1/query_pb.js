"use strict";
// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file cosmos/staking/v1beta1/query.proto (package cosmos.staking.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryPoolResponse = exports.QueryPoolRequest = exports.QueryHistoricalInfoResponse = exports.QueryHistoricalInfoRequest = exports.QueryDelegatorValidatorResponse = exports.QueryDelegatorValidatorRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryRedelegationsResponse = exports.QueryRedelegationsRequest = exports.QueryDelegatorUnbondingDelegationsResponse = exports.QueryDelegatorUnbondingDelegationsRequest = exports.QueryDelegatorDelegationsResponse = exports.QueryDelegatorDelegationsRequest = exports.QueryUnbondingDelegationResponse = exports.QueryUnbondingDelegationRequest = exports.QueryDelegationResponse = exports.QueryDelegationRequest = exports.QueryValidatorUnbondingDelegationsResponse = exports.QueryValidatorUnbondingDelegationsRequest = exports.QueryValidatorDelegationsResponse = exports.QueryValidatorDelegationsRequest = exports.QueryValidatorResponse = exports.QueryValidatorRequest = exports.QueryValidatorsResponse = exports.QueryValidatorsRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const pagination_pb_js_1 = require("../../base/query/v1beta1/pagination_pb.js");
const staking_pb_js_1 = require("./staking_pb.js");
/**
 * QueryValidatorsRequest is request type for Query/Validators RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorsRequest
 */
class QueryValidatorsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * status enables to query for validators matching a given status.
         *
         * @generated from field: string status = 1;
         */
        this.status = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorsRequest, a, b);
    }
}
exports.QueryValidatorsRequest = QueryValidatorsRequest;
QueryValidatorsRequest.runtime = protobuf_1.proto3;
QueryValidatorsRequest.typeName = "cosmos.staking.v1beta1.QueryValidatorsRequest";
QueryValidatorsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryValidatorsResponse is response type for the Query/Validators RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorsResponse
 */
class QueryValidatorsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validators contains all the queried validators.
         *
         * @generated from field: repeated cosmos.staking.v1beta1.Validator validators = 1;
         */
        this.validators = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorsResponse, a, b);
    }
}
exports.QueryValidatorsResponse = QueryValidatorsResponse;
QueryValidatorsResponse.runtime = protobuf_1.proto3;
QueryValidatorsResponse.typeName = "cosmos.staking.v1beta1.QueryValidatorsResponse";
QueryValidatorsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validators", kind: "message", T: staking_pb_js_1.Validator, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryValidatorRequest is response type for the Query/Validator RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorRequest
 */
class QueryValidatorRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validator_addr defines the validator address to query for.
         *
         * @generated from field: string validator_addr = 1;
         */
        this.validatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorRequest, a, b);
    }
}
exports.QueryValidatorRequest = QueryValidatorRequest;
QueryValidatorRequest.runtime = protobuf_1.proto3;
QueryValidatorRequest.typeName = "cosmos.staking.v1beta1.QueryValidatorRequest";
QueryValidatorRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryValidatorResponse is response type for the Query/Validator RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorResponse
 */
class QueryValidatorResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorResponse, a, b);
    }
}
exports.QueryValidatorResponse = QueryValidatorResponse;
QueryValidatorResponse.runtime = protobuf_1.proto3;
QueryValidatorResponse.typeName = "cosmos.staking.v1beta1.QueryValidatorResponse";
QueryValidatorResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator", kind: "message", T: staking_pb_js_1.Validator },
]);
/**
 * QueryValidatorDelegationsRequest is request type for the
 * Query/ValidatorDelegations RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorDelegationsRequest
 */
class QueryValidatorDelegationsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validator_addr defines the validator address to query for.
         *
         * @generated from field: string validator_addr = 1;
         */
        this.validatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorDelegationsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorDelegationsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorDelegationsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorDelegationsRequest, a, b);
    }
}
exports.QueryValidatorDelegationsRequest = QueryValidatorDelegationsRequest;
QueryValidatorDelegationsRequest.runtime = protobuf_1.proto3;
QueryValidatorDelegationsRequest.typeName = "cosmos.staking.v1beta1.QueryValidatorDelegationsRequest";
QueryValidatorDelegationsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryValidatorDelegationsResponse is response type for the
 * Query/ValidatorDelegations RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorDelegationsResponse
 */
class QueryValidatorDelegationsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1;
         */
        this.delegationResponses = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorDelegationsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorDelegationsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorDelegationsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorDelegationsResponse, a, b);
    }
}
exports.QueryValidatorDelegationsResponse = QueryValidatorDelegationsResponse;
QueryValidatorDelegationsResponse.runtime = protobuf_1.proto3;
QueryValidatorDelegationsResponse.typeName = "cosmos.staking.v1beta1.QueryValidatorDelegationsResponse";
QueryValidatorDelegationsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegation_responses", kind: "message", T: staking_pb_js_1.DelegationResponse, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryValidatorUnbondingDelegationsRequest is required type for the
 * Query/ValidatorUnbondingDelegations RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest
 */
class QueryValidatorUnbondingDelegationsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validator_addr defines the validator address to query for.
         *
         * @generated from field: string validator_addr = 1;
         */
        this.validatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorUnbondingDelegationsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorUnbondingDelegationsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorUnbondingDelegationsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorUnbondingDelegationsRequest, a, b);
    }
}
exports.QueryValidatorUnbondingDelegationsRequest = QueryValidatorUnbondingDelegationsRequest;
QueryValidatorUnbondingDelegationsRequest.runtime = protobuf_1.proto3;
QueryValidatorUnbondingDelegationsRequest.typeName = "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest";
QueryValidatorUnbondingDelegationsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryValidatorUnbondingDelegationsResponse is response type for the
 * Query/ValidatorUnbondingDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse
 */
class QueryValidatorUnbondingDelegationsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1;
         */
        this.unbondingResponses = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorUnbondingDelegationsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorUnbondingDelegationsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorUnbondingDelegationsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorUnbondingDelegationsResponse, a, b);
    }
}
exports.QueryValidatorUnbondingDelegationsResponse = QueryValidatorUnbondingDelegationsResponse;
QueryValidatorUnbondingDelegationsResponse.runtime = protobuf_1.proto3;
QueryValidatorUnbondingDelegationsResponse.typeName = "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse";
QueryValidatorUnbondingDelegationsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "unbonding_responses", kind: "message", T: staking_pb_js_1.UnbondingDelegation, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryDelegationRequest is request type for the Query/Delegation RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegationRequest
 */
class QueryDelegationRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_addr defines the delegator address to query for.
         *
         * @generated from field: string delegator_addr = 1;
         */
        this.delegatorAddr = "";
        /**
         * validator_addr defines the validator address to query for.
         *
         * @generated from field: string validator_addr = 2;
         */
        this.validatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegationRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegationRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegationRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegationRequest, a, b);
    }
}
exports.QueryDelegationRequest = QueryDelegationRequest;
QueryDelegationRequest.runtime = protobuf_1.proto3;
QueryDelegationRequest.typeName = "cosmos.staking.v1beta1.QueryDelegationRequest";
QueryDelegationRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryDelegationResponse is response type for the Query/Delegation RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegationResponse
 */
class QueryDelegationResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegationResponse, a, b);
    }
}
exports.QueryDelegationResponse = QueryDelegationResponse;
QueryDelegationResponse.runtime = protobuf_1.proto3;
QueryDelegationResponse.typeName = "cosmos.staking.v1beta1.QueryDelegationResponse";
QueryDelegationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegation_response", kind: "message", T: staking_pb_js_1.DelegationResponse },
]);
/**
 * QueryUnbondingDelegationRequest is request type for the
 * Query/UnbondingDelegation RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryUnbondingDelegationRequest
 */
class QueryUnbondingDelegationRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_addr defines the delegator address to query for.
         *
         * @generated from field: string delegator_addr = 1;
         */
        this.delegatorAddr = "";
        /**
         * validator_addr defines the validator address to query for.
         *
         * @generated from field: string validator_addr = 2;
         */
        this.validatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryUnbondingDelegationRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryUnbondingDelegationRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryUnbondingDelegationRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryUnbondingDelegationRequest, a, b);
    }
}
exports.QueryUnbondingDelegationRequest = QueryUnbondingDelegationRequest;
QueryUnbondingDelegationRequest.runtime = protobuf_1.proto3;
QueryUnbondingDelegationRequest.typeName = "cosmos.staking.v1beta1.QueryUnbondingDelegationRequest";
QueryUnbondingDelegationRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryDelegationResponse is response type for the Query/UnbondingDelegation
 * RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryUnbondingDelegationResponse
 */
class QueryUnbondingDelegationResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryUnbondingDelegationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryUnbondingDelegationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryUnbondingDelegationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryUnbondingDelegationResponse, a, b);
    }
}
exports.QueryUnbondingDelegationResponse = QueryUnbondingDelegationResponse;
QueryUnbondingDelegationResponse.runtime = protobuf_1.proto3;
QueryUnbondingDelegationResponse.typeName = "cosmos.staking.v1beta1.QueryUnbondingDelegationResponse";
QueryUnbondingDelegationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "unbond", kind: "message", T: staking_pb_js_1.UnbondingDelegation },
]);
/**
 * QueryDelegatorDelegationsRequest is request type for the
 * Query/DelegatorDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest
 */
class QueryDelegatorDelegationsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_addr defines the delegator address to query for.
         *
         * @generated from field: string delegator_addr = 1;
         */
        this.delegatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorDelegationsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorDelegationsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorDelegationsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorDelegationsRequest, a, b);
    }
}
exports.QueryDelegatorDelegationsRequest = QueryDelegatorDelegationsRequest;
QueryDelegatorDelegationsRequest.runtime = protobuf_1.proto3;
QueryDelegatorDelegationsRequest.typeName = "cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest";
QueryDelegatorDelegationsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryDelegatorDelegationsResponse is response type for the
 * Query/DelegatorDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse
 */
class QueryDelegatorDelegationsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegation_responses defines all the delegations' info of a delegator.
         *
         * @generated from field: repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1;
         */
        this.delegationResponses = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorDelegationsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorDelegationsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorDelegationsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorDelegationsResponse, a, b);
    }
}
exports.QueryDelegatorDelegationsResponse = QueryDelegatorDelegationsResponse;
QueryDelegatorDelegationsResponse.runtime = protobuf_1.proto3;
QueryDelegatorDelegationsResponse.typeName = "cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse";
QueryDelegatorDelegationsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegation_responses", kind: "message", T: staking_pb_js_1.DelegationResponse, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryDelegatorUnbondingDelegationsRequest is request type for the
 * Query/DelegatorUnbondingDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest
 */
class QueryDelegatorUnbondingDelegationsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_addr defines the delegator address to query for.
         *
         * @generated from field: string delegator_addr = 1;
         */
        this.delegatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorUnbondingDelegationsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorUnbondingDelegationsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorUnbondingDelegationsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorUnbondingDelegationsRequest, a, b);
    }
}
exports.QueryDelegatorUnbondingDelegationsRequest = QueryDelegatorUnbondingDelegationsRequest;
QueryDelegatorUnbondingDelegationsRequest.runtime = protobuf_1.proto3;
QueryDelegatorUnbondingDelegationsRequest.typeName = "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest";
QueryDelegatorUnbondingDelegationsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryUnbondingDelegatorDelegationsResponse is response type for the
 * Query/UnbondingDelegatorDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse
 */
class QueryDelegatorUnbondingDelegationsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1;
         */
        this.unbondingResponses = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorUnbondingDelegationsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorUnbondingDelegationsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorUnbondingDelegationsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorUnbondingDelegationsResponse, a, b);
    }
}
exports.QueryDelegatorUnbondingDelegationsResponse = QueryDelegatorUnbondingDelegationsResponse;
QueryDelegatorUnbondingDelegationsResponse.runtime = protobuf_1.proto3;
QueryDelegatorUnbondingDelegationsResponse.typeName = "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse";
QueryDelegatorUnbondingDelegationsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "unbonding_responses", kind: "message", T: staking_pb_js_1.UnbondingDelegation, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryRedelegationsRequest is request type for the Query/Redelegations RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryRedelegationsRequest
 */
class QueryRedelegationsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_addr defines the delegator address to query for.
         *
         * @generated from field: string delegator_addr = 1;
         */
        this.delegatorAddr = "";
        /**
         * src_validator_addr defines the validator address to redelegate from.
         *
         * @generated from field: string src_validator_addr = 2;
         */
        this.srcValidatorAddr = "";
        /**
         * dst_validator_addr defines the validator address to redelegate to.
         *
         * @generated from field: string dst_validator_addr = 3;
         */
        this.dstValidatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryRedelegationsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryRedelegationsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryRedelegationsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryRedelegationsRequest, a, b);
    }
}
exports.QueryRedelegationsRequest = QueryRedelegationsRequest;
QueryRedelegationsRequest.runtime = protobuf_1.proto3;
QueryRedelegationsRequest.typeName = "cosmos.staking.v1beta1.QueryRedelegationsRequest";
QueryRedelegationsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "src_validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "dst_validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryRedelegationsResponse is response type for the Query/Redelegations RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryRedelegationsResponse
 */
class QueryRedelegationsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1;
         */
        this.redelegationResponses = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryRedelegationsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryRedelegationsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryRedelegationsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryRedelegationsResponse, a, b);
    }
}
exports.QueryRedelegationsResponse = QueryRedelegationsResponse;
QueryRedelegationsResponse.runtime = protobuf_1.proto3;
QueryRedelegationsResponse.typeName = "cosmos.staking.v1beta1.QueryRedelegationsResponse";
QueryRedelegationsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "redelegation_responses", kind: "message", T: staking_pb_js_1.RedelegationResponse, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryDelegatorValidatorsRequest is request type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest
 */
class QueryDelegatorValidatorsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_addr defines the delegator address to query for.
         *
         * @generated from field: string delegator_addr = 1;
         */
        this.delegatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorValidatorsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorValidatorsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorValidatorsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorValidatorsRequest, a, b);
    }
}
exports.QueryDelegatorValidatorsRequest = QueryDelegatorValidatorsRequest;
QueryDelegatorValidatorsRequest.runtime = protobuf_1.proto3;
QueryDelegatorValidatorsRequest.typeName = "cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest";
QueryDelegatorValidatorsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryDelegatorValidatorsResponse is response type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse
 */
class QueryDelegatorValidatorsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validators defines the validators' info of a delegator.
         *
         * @generated from field: repeated cosmos.staking.v1beta1.Validator validators = 1;
         */
        this.validators = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorValidatorsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorValidatorsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorValidatorsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorValidatorsResponse, a, b);
    }
}
exports.QueryDelegatorValidatorsResponse = QueryDelegatorValidatorsResponse;
QueryDelegatorValidatorsResponse.runtime = protobuf_1.proto3;
QueryDelegatorValidatorsResponse.typeName = "cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse";
QueryDelegatorValidatorsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validators", kind: "message", T: staking_pb_js_1.Validator, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryDelegatorValidatorRequest is request type for the
 * Query/DelegatorValidator RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorRequest
 */
class QueryDelegatorValidatorRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_addr defines the delegator address to query for.
         *
         * @generated from field: string delegator_addr = 1;
         */
        this.delegatorAddr = "";
        /**
         * validator_addr defines the validator address to query for.
         *
         * @generated from field: string validator_addr = 2;
         */
        this.validatorAddr = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorValidatorRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorValidatorRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorValidatorRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorValidatorRequest, a, b);
    }
}
exports.QueryDelegatorValidatorRequest = QueryDelegatorValidatorRequest;
QueryDelegatorValidatorRequest.runtime = protobuf_1.proto3;
QueryDelegatorValidatorRequest.typeName = "cosmos.staking.v1beta1.QueryDelegatorValidatorRequest";
QueryDelegatorValidatorRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryDelegatorValidatorResponse response type for the
 * Query/DelegatorValidator RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorResponse
 */
class QueryDelegatorValidatorResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorValidatorResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorValidatorResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorValidatorResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorValidatorResponse, a, b);
    }
}
exports.QueryDelegatorValidatorResponse = QueryDelegatorValidatorResponse;
QueryDelegatorValidatorResponse.runtime = protobuf_1.proto3;
QueryDelegatorValidatorResponse.typeName = "cosmos.staking.v1beta1.QueryDelegatorValidatorResponse";
QueryDelegatorValidatorResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator", kind: "message", T: staking_pb_js_1.Validator },
]);
/**
 * QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryHistoricalInfoRequest
 */
class QueryHistoricalInfoRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * height defines at which height to query the historical info.
         *
         * @generated from field: int64 height = 1;
         */
        this.height = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryHistoricalInfoRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryHistoricalInfoRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryHistoricalInfoRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryHistoricalInfoRequest, a, b);
    }
}
exports.QueryHistoricalInfoRequest = QueryHistoricalInfoRequest;
QueryHistoricalInfoRequest.runtime = protobuf_1.proto3;
QueryHistoricalInfoRequest.typeName = "cosmos.staking.v1beta1.QueryHistoricalInfoRequest";
QueryHistoricalInfoRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "height", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
/**
 * QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryHistoricalInfoResponse
 */
class QueryHistoricalInfoResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryHistoricalInfoResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryHistoricalInfoResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryHistoricalInfoResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryHistoricalInfoResponse, a, b);
    }
}
exports.QueryHistoricalInfoResponse = QueryHistoricalInfoResponse;
QueryHistoricalInfoResponse.runtime = protobuf_1.proto3;
QueryHistoricalInfoResponse.typeName = "cosmos.staking.v1beta1.QueryHistoricalInfoResponse";
QueryHistoricalInfoResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "hist", kind: "message", T: staking_pb_js_1.HistoricalInfo },
]);
/**
 * QueryPoolRequest is request type for the Query/Pool RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryPoolRequest
 */
class QueryPoolRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryPoolRequest, a, b);
    }
}
exports.QueryPoolRequest = QueryPoolRequest;
QueryPoolRequest.runtime = protobuf_1.proto3;
QueryPoolRequest.typeName = "cosmos.staking.v1beta1.QueryPoolRequest";
QueryPoolRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * QueryPoolResponse is response type for the Query/Pool RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryPoolResponse
 */
class QueryPoolResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryPoolResponse, a, b);
    }
}
exports.QueryPoolResponse = QueryPoolResponse;
QueryPoolResponse.runtime = protobuf_1.proto3;
QueryPoolResponse.typeName = "cosmos.staking.v1beta1.QueryPoolResponse";
QueryPoolResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "pool", kind: "message", T: staking_pb_js_1.Pool },
]);
/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryParamsRequest
 */
class QueryParamsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryParamsRequest, a, b);
    }
}
exports.QueryParamsRequest = QueryParamsRequest;
QueryParamsRequest.runtime = protobuf_1.proto3;
QueryParamsRequest.typeName = "cosmos.staking.v1beta1.QueryParamsRequest";
QueryParamsRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryParamsResponse
 */
class QueryParamsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryParamsResponse, a, b);
    }
}
exports.QueryParamsResponse = QueryParamsResponse;
QueryParamsResponse.runtime = protobuf_1.proto3;
QueryParamsResponse.typeName = "cosmos.staking.v1beta1.QueryParamsResponse";
QueryParamsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: staking_pb_js_1.Params },
]);
