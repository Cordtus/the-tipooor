"use strict";
// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file cosmos/slashing/v1beta1/genesis.proto (package cosmos.slashing.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.MissedBlock = exports.ValidatorMissedBlocks = exports.SigningInfo = exports.GenesisState = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const slashing_pb_js_1 = require("./slashing_pb.js");
/**
 * GenesisState defines the slashing module's genesis state.
 *
 * @generated from message cosmos.slashing.v1beta1.GenesisState
 */
class GenesisState extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * signing_infos represents a map between validator addresses and their
         * signing infos.
         *
         * @generated from field: repeated cosmos.slashing.v1beta1.SigningInfo signing_infos = 2;
         */
        this.signingInfos = [];
        /**
         * missed_blocks represents a map between validator addresses and their
         * missed blocks.
         *
         * @generated from field: repeated cosmos.slashing.v1beta1.ValidatorMissedBlocks missed_blocks = 3;
         */
        this.missedBlocks = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GenesisState().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GenesisState().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GenesisState().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GenesisState, a, b);
    }
}
exports.GenesisState = GenesisState;
GenesisState.runtime = protobuf_1.proto3;
GenesisState.typeName = "cosmos.slashing.v1beta1.GenesisState";
GenesisState.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: slashing_pb_js_1.Params },
    { no: 2, name: "signing_infos", kind: "message", T: SigningInfo, repeated: true },
    { no: 3, name: "missed_blocks", kind: "message", T: ValidatorMissedBlocks, repeated: true },
]);
/**
 * SigningInfo stores validator signing info of corresponding address.
 *
 * @generated from message cosmos.slashing.v1beta1.SigningInfo
 */
class SigningInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * address is the validator address.
         *
         * @generated from field: string address = 1;
         */
        this.address = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SigningInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SigningInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SigningInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SigningInfo, a, b);
    }
}
exports.SigningInfo = SigningInfo;
SigningInfo.runtime = protobuf_1.proto3;
SigningInfo.typeName = "cosmos.slashing.v1beta1.SigningInfo";
SigningInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validator_signing_info", kind: "message", T: slashing_pb_js_1.ValidatorSigningInfo },
]);
/**
 * ValidatorMissedBlocks contains array of missed blocks of corresponding
 * address.
 *
 * @generated from message cosmos.slashing.v1beta1.ValidatorMissedBlocks
 */
class ValidatorMissedBlocks extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * address is the validator address.
         *
         * @generated from field: string address = 1;
         */
        this.address = "";
        /**
         * missed_blocks is an array of missed blocks by the validator.
         *
         * @generated from field: repeated cosmos.slashing.v1beta1.MissedBlock missed_blocks = 2;
         */
        this.missedBlocks = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ValidatorMissedBlocks().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ValidatorMissedBlocks().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ValidatorMissedBlocks().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ValidatorMissedBlocks, a, b);
    }
}
exports.ValidatorMissedBlocks = ValidatorMissedBlocks;
ValidatorMissedBlocks.runtime = protobuf_1.proto3;
ValidatorMissedBlocks.typeName = "cosmos.slashing.v1beta1.ValidatorMissedBlocks";
ValidatorMissedBlocks.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "missed_blocks", kind: "message", T: MissedBlock, repeated: true },
]);
/**
 * MissedBlock contains height and missed status as boolean.
 *
 * @generated from message cosmos.slashing.v1beta1.MissedBlock
 */
class MissedBlock extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * index is the height at which the block was missed.
         *
         * @generated from field: int64 index = 1;
         */
        this.index = protobuf_1.protoInt64.zero;
        /**
         * missed is the missed status.
         *
         * @generated from field: bool missed = 2;
         */
        this.missed = false;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MissedBlock().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MissedBlock().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MissedBlock().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MissedBlock, a, b);
    }
}
exports.MissedBlock = MissedBlock;
MissedBlock.runtime = protobuf_1.proto3;
MissedBlock.typeName = "cosmos.slashing.v1beta1.MissedBlock";
MissedBlock.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "index", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "missed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
