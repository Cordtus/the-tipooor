"use strict";
// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file cosmos/base/snapshots/v1beta1/snapshot.proto (package cosmos.base.snapshots.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotSchema = exports.SnapshotKVItem = exports.SnapshotExtensionPayload = exports.SnapshotExtensionMeta = exports.SnapshotIAVLItem = exports.SnapshotStoreItem = exports.SnapshotItem = exports.Metadata = exports.Snapshot = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * Snapshot contains Tendermint state sync snapshot info.
 *
 * @generated from message cosmos.base.snapshots.v1beta1.Snapshot
 */
class Snapshot extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 height = 1;
         */
        this.height = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint32 format = 2;
         */
        this.format = 0;
        /**
         * @generated from field: uint32 chunks = 3;
         */
        this.chunks = 0;
        /**
         * @generated from field: bytes hash = 4;
         */
        this.hash = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Snapshot().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Snapshot().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Snapshot().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Snapshot, a, b);
    }
}
exports.Snapshot = Snapshot;
Snapshot.runtime = protobuf_1.proto3;
Snapshot.typeName = "cosmos.base.snapshots.v1beta1.Snapshot";
Snapshot.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "format", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "chunks", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "metadata", kind: "message", T: Metadata },
]);
/**
 * Metadata contains SDK-specific snapshot metadata.
 *
 * @generated from message cosmos.base.snapshots.v1beta1.Metadata
 */
class Metadata extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * SHA-256 chunk hashes
         *
         * @generated from field: repeated bytes chunk_hashes = 1;
         */
        this.chunkHashes = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Metadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Metadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Metadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Metadata, a, b);
    }
}
exports.Metadata = Metadata;
Metadata.runtime = protobuf_1.proto3;
Metadata.typeName = "cosmos.base.snapshots.v1beta1.Metadata";
Metadata.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "chunk_hashes", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
]);
/**
 * SnapshotItem is an item contained in a rootmulti.Store snapshot.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.base.snapshots.v1beta1.SnapshotItem
 */
class SnapshotItem extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * item is the specific type of snapshot item.
         *
         * @generated from oneof cosmos.base.snapshots.v1beta1.SnapshotItem.item
         */
        this.item = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotItem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotItem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotItem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SnapshotItem, a, b);
    }
}
exports.SnapshotItem = SnapshotItem;
SnapshotItem.runtime = protobuf_1.proto3;
SnapshotItem.typeName = "cosmos.base.snapshots.v1beta1.SnapshotItem";
SnapshotItem.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "store", kind: "message", T: SnapshotStoreItem, oneof: "item" },
    { no: 2, name: "iavl", kind: "message", T: SnapshotIAVLItem, oneof: "item" },
    { no: 3, name: "extension", kind: "message", T: SnapshotExtensionMeta, oneof: "item" },
    { no: 4, name: "extension_payload", kind: "message", T: SnapshotExtensionPayload, oneof: "item" },
    { no: 5, name: "kv", kind: "message", T: SnapshotKVItem, oneof: "item" },
    { no: 6, name: "schema", kind: "message", T: SnapshotSchema, oneof: "item" },
]);
/**
 * SnapshotStoreItem contains metadata about a snapshotted store.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.base.snapshots.v1beta1.SnapshotStoreItem
 */
class SnapshotStoreItem extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string name = 1;
         */
        this.name = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotStoreItem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotStoreItem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotStoreItem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SnapshotStoreItem, a, b);
    }
}
exports.SnapshotStoreItem = SnapshotStoreItem;
SnapshotStoreItem.runtime = protobuf_1.proto3;
SnapshotStoreItem.typeName = "cosmos.base.snapshots.v1beta1.SnapshotStoreItem";
SnapshotStoreItem.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * SnapshotIAVLItem is an exported IAVL node.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.base.snapshots.v1beta1.SnapshotIAVLItem
 */
class SnapshotIAVLItem extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes key = 1;
         */
        this.key = new Uint8Array(0);
        /**
         * @generated from field: bytes value = 2;
         */
        this.value = new Uint8Array(0);
        /**
         * version is block height
         *
         * @generated from field: int64 version = 3;
         */
        this.version = protobuf_1.protoInt64.zero;
        /**
         * height is depth of the tree.
         *
         * @generated from field: int32 height = 4;
         */
        this.height = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotIAVLItem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotIAVLItem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotIAVLItem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SnapshotIAVLItem, a, b);
    }
}
exports.SnapshotIAVLItem = SnapshotIAVLItem;
SnapshotIAVLItem.runtime = protobuf_1.proto3;
SnapshotIAVLItem.typeName = "cosmos.base.snapshots.v1beta1.SnapshotIAVLItem";
SnapshotIAVLItem.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "version", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "height", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
]);
/**
 * SnapshotExtensionMeta contains metadata about an external snapshotter.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.base.snapshots.v1beta1.SnapshotExtensionMeta
 */
class SnapshotExtensionMeta extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string name = 1;
         */
        this.name = "";
        /**
         * @generated from field: uint32 format = 2;
         */
        this.format = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotExtensionMeta().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotExtensionMeta().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotExtensionMeta().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SnapshotExtensionMeta, a, b);
    }
}
exports.SnapshotExtensionMeta = SnapshotExtensionMeta;
SnapshotExtensionMeta.runtime = protobuf_1.proto3;
SnapshotExtensionMeta.typeName = "cosmos.base.snapshots.v1beta1.SnapshotExtensionMeta";
SnapshotExtensionMeta.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "format", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * SnapshotExtensionPayload contains payloads of an external snapshotter.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.base.snapshots.v1beta1.SnapshotExtensionPayload
 */
class SnapshotExtensionPayload extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes payload = 1;
         */
        this.payload = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotExtensionPayload().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotExtensionPayload().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotExtensionPayload().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SnapshotExtensionPayload, a, b);
    }
}
exports.SnapshotExtensionPayload = SnapshotExtensionPayload;
SnapshotExtensionPayload.runtime = protobuf_1.proto3;
SnapshotExtensionPayload.typeName = "cosmos.base.snapshots.v1beta1.SnapshotExtensionPayload";
SnapshotExtensionPayload.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "payload", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * SnapshotKVItem is an exported Key/Value Pair
 *
 * Since: cosmos-sdk 0.46
 * Deprecated: This message was part of store/v2alpha1 which has been deleted from v0.47.
 *
 * @generated from message cosmos.base.snapshots.v1beta1.SnapshotKVItem
 * @deprecated
 */
class SnapshotKVItem extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes key = 1;
         */
        this.key = new Uint8Array(0);
        /**
         * @generated from field: bytes value = 2;
         */
        this.value = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotKVItem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotKVItem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotKVItem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SnapshotKVItem, a, b);
    }
}
exports.SnapshotKVItem = SnapshotKVItem;
SnapshotKVItem.runtime = protobuf_1.proto3;
SnapshotKVItem.typeName = "cosmos.base.snapshots.v1beta1.SnapshotKVItem";
SnapshotKVItem.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * SnapshotSchema is an exported schema of smt store
 *
 * Since: cosmos-sdk 0.46
 * Deprecated: This message was part of store/v2alpha1 which has been deleted from v0.47.
 *
 * @generated from message cosmos.base.snapshots.v1beta1.SnapshotSchema
 * @deprecated
 */
class SnapshotSchema extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated bytes keys = 1;
         */
        this.keys = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotSchema().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotSchema().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotSchema().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SnapshotSchema, a, b);
    }
}
exports.SnapshotSchema = SnapshotSchema;
SnapshotSchema.runtime = protobuf_1.proto3;
SnapshotSchema.typeName = "cosmos.base.snapshots.v1beta1.SnapshotSchema";
SnapshotSchema.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "keys", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
]);
