"use strict";
// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file cosmos/bank/v1beta1/tx.proto (package cosmos.bank.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgSetSendEnabledResponse = exports.MsgSetSendEnabled = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgMultiSendResponse = exports.MsgMultiSend = exports.MsgSendResponse = exports.MsgSend = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const coin_pb_js_1 = require("../../base/v1beta1/coin_pb.js");
const bank_pb_js_1 = require("./bank_pb.js");
/**
 * MsgSend represents a message to send coins from one account to another.
 *
 * @generated from message cosmos.bank.v1beta1.MsgSend
 */
class MsgSend extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string from_address = 1;
         */
        this.fromAddress = "";
        /**
         * @generated from field: string to_address = 2;
         */
        this.toAddress = "";
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
         */
        this.amount = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSend().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSend().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSend().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgSend, a, b);
    }
}
exports.MsgSend = MsgSend;
MsgSend.runtime = protobuf_1.proto3;
MsgSend.typeName = "cosmos.bank.v1beta1.MsgSend";
MsgSend.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "from_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "to_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "message", T: coin_pb_js_1.Coin, repeated: true },
]);
/**
 * MsgSendResponse defines the Msg/Send response type.
 *
 * @generated from message cosmos.bank.v1beta1.MsgSendResponse
 */
class MsgSendResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSendResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSendResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSendResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgSendResponse, a, b);
    }
}
exports.MsgSendResponse = MsgSendResponse;
MsgSendResponse.runtime = protobuf_1.proto3;
MsgSendResponse.typeName = "cosmos.bank.v1beta1.MsgSendResponse";
MsgSendResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * MsgMultiSend represents an arbitrary multi-in, multi-out send message.
 *
 * @generated from message cosmos.bank.v1beta1.MsgMultiSend
 */
class MsgMultiSend extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Inputs, despite being `repeated`, only allows one sender input. This is
         * checked in MsgMultiSend's ValidateBasic.
         *
         * @generated from field: repeated cosmos.bank.v1beta1.Input inputs = 1;
         */
        this.inputs = [];
        /**
         * @generated from field: repeated cosmos.bank.v1beta1.Output outputs = 2;
         */
        this.outputs = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgMultiSend().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgMultiSend().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgMultiSend().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgMultiSend, a, b);
    }
}
exports.MsgMultiSend = MsgMultiSend;
MsgMultiSend.runtime = protobuf_1.proto3;
MsgMultiSend.typeName = "cosmos.bank.v1beta1.MsgMultiSend";
MsgMultiSend.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "inputs", kind: "message", T: bank_pb_js_1.Input, repeated: true },
    { no: 2, name: "outputs", kind: "message", T: bank_pb_js_1.Output, repeated: true },
]);
/**
 * MsgMultiSendResponse defines the Msg/MultiSend response type.
 *
 * @generated from message cosmos.bank.v1beta1.MsgMultiSendResponse
 */
class MsgMultiSendResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgMultiSendResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgMultiSendResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgMultiSendResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgMultiSendResponse, a, b);
    }
}
exports.MsgMultiSendResponse = MsgMultiSendResponse;
MsgMultiSendResponse.runtime = protobuf_1.proto3;
MsgMultiSendResponse.typeName = "cosmos.bank.v1beta1.MsgMultiSendResponse";
MsgMultiSendResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.bank.v1beta1.MsgUpdateParams
 */
class MsgUpdateParams extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * authority is the address that controls the module (defaults to x/gov unless overwritten).
         *
         * @generated from field: string authority = 1;
         */
        this.authority = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParams().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParams().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParams().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgUpdateParams, a, b);
    }
}
exports.MsgUpdateParams = MsgUpdateParams;
MsgUpdateParams.runtime = protobuf_1.proto3;
MsgUpdateParams.typeName = "cosmos.bank.v1beta1.MsgUpdateParams";
MsgUpdateParams.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: bank_pb_js_1.Params },
]);
/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.bank.v1beta1.MsgUpdateParamsResponse
 */
class MsgUpdateParamsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgUpdateParamsResponse, a, b);
    }
}
exports.MsgUpdateParamsResponse = MsgUpdateParamsResponse;
MsgUpdateParamsResponse.runtime = protobuf_1.proto3;
MsgUpdateParamsResponse.typeName = "cosmos.bank.v1beta1.MsgUpdateParamsResponse";
MsgUpdateParamsResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * MsgSetSendEnabled is the Msg/SetSendEnabled request type.
 *
 * Only entries to add/update/delete need to be included.
 * Existing SendEnabled entries that are not included in this
 * message are left unchanged.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.bank.v1beta1.MsgSetSendEnabled
 */
class MsgSetSendEnabled extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string authority = 1;
         */
        this.authority = "";
        /**
         * send_enabled is the list of entries to add or update.
         *
         * @generated from field: repeated cosmos.bank.v1beta1.SendEnabled send_enabled = 2;
         */
        this.sendEnabled = [];
        /**
         * use_default_for is a list of denoms that should use the params.default_send_enabled value.
         * Denoms listed here will have their SendEnabled entries deleted.
         * If a denom is included that doesn't have a SendEnabled entry,
         * it will be ignored.
         *
         * @generated from field: repeated string use_default_for = 3;
         */
        this.useDefaultFor = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSetSendEnabled().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSetSendEnabled().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSetSendEnabled().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgSetSendEnabled, a, b);
    }
}
exports.MsgSetSendEnabled = MsgSetSendEnabled;
MsgSetSendEnabled.runtime = protobuf_1.proto3;
MsgSetSendEnabled.typeName = "cosmos.bank.v1beta1.MsgSetSendEnabled";
MsgSetSendEnabled.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "send_enabled", kind: "message", T: bank_pb_js_1.SendEnabled, repeated: true },
    { no: 3, name: "use_default_for", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
]);
/**
 * MsgSetSendEnabledResponse defines the Msg/SetSendEnabled response type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.bank.v1beta1.MsgSetSendEnabledResponse
 */
class MsgSetSendEnabledResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSetSendEnabledResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSetSendEnabledResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSetSendEnabledResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MsgSetSendEnabledResponse, a, b);
    }
}
exports.MsgSetSendEnabledResponse = MsgSetSendEnabledResponse;
MsgSetSendEnabledResponse.runtime = protobuf_1.proto3;
MsgSetSendEnabledResponse.typeName = "cosmos.bank.v1beta1.MsgSetSendEnabledResponse";
MsgSetSendEnabledResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
