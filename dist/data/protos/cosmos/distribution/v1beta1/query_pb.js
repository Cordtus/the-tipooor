"use strict";
// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file cosmos/distribution/v1beta1/query.proto (package cosmos.distribution.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryCommunityPoolResponse = exports.QueryCommunityPoolRequest = exports.QueryDelegatorWithdrawAddressResponse = exports.QueryDelegatorWithdrawAddressRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryDelegationTotalRewardsResponse = exports.QueryDelegationTotalRewardsRequest = exports.QueryDelegationRewardsResponse = exports.QueryDelegationRewardsRequest = exports.QueryValidatorSlashesResponse = exports.QueryValidatorSlashesRequest = exports.QueryValidatorCommissionResponse = exports.QueryValidatorCommissionRequest = exports.QueryValidatorOutstandingRewardsResponse = exports.QueryValidatorOutstandingRewardsRequest = exports.QueryValidatorDistributionInfoResponse = exports.QueryValidatorDistributionInfoRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const distribution_pb_js_1 = require("./distribution_pb.js");
const coin_pb_js_1 = require("../../base/v1beta1/coin_pb.js");
const pagination_pb_js_1 = require("../../base/query/v1beta1/pagination_pb.js");
/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryParamsRequest
 */
class QueryParamsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryParamsRequest, a, b);
    }
}
exports.QueryParamsRequest = QueryParamsRequest;
QueryParamsRequest.runtime = protobuf_1.proto3;
QueryParamsRequest.typeName = "cosmos.distribution.v1beta1.QueryParamsRequest";
QueryParamsRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryParamsResponse
 */
class QueryParamsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryParamsResponse, a, b);
    }
}
exports.QueryParamsResponse = QueryParamsResponse;
QueryParamsResponse.runtime = protobuf_1.proto3;
QueryParamsResponse.typeName = "cosmos.distribution.v1beta1.QueryParamsResponse";
QueryParamsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: distribution_pb_js_1.Params },
]);
/**
 * QueryValidatorDistributionInfoRequest is the request type for the Query/ValidatorDistributionInfo RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest
 */
class QueryValidatorDistributionInfoRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validator_address defines the validator address to query for.
         *
         * @generated from field: string validator_address = 1;
         */
        this.validatorAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorDistributionInfoRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorDistributionInfoRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorDistributionInfoRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorDistributionInfoRequest, a, b);
    }
}
exports.QueryValidatorDistributionInfoRequest = QueryValidatorDistributionInfoRequest;
QueryValidatorDistributionInfoRequest.runtime = protobuf_1.proto3;
QueryValidatorDistributionInfoRequest.typeName = "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest";
QueryValidatorDistributionInfoRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse
 */
class QueryValidatorDistributionInfoResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * operator_address defines the validator operator address.
         *
         * @generated from field: string operator_address = 1;
         */
        this.operatorAddress = "";
        /**
         * self_bond_rewards defines the self delegations rewards.
         *
         * @generated from field: repeated cosmos.base.v1beta1.DecCoin self_bond_rewards = 2;
         */
        this.selfBondRewards = [];
        /**
         * commission defines the commission the validator received.
         *
         * @generated from field: repeated cosmos.base.v1beta1.DecCoin commission = 3;
         */
        this.commission = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorDistributionInfoResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorDistributionInfoResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorDistributionInfoResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorDistributionInfoResponse, a, b);
    }
}
exports.QueryValidatorDistributionInfoResponse = QueryValidatorDistributionInfoResponse;
QueryValidatorDistributionInfoResponse.runtime = protobuf_1.proto3;
QueryValidatorDistributionInfoResponse.typeName = "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse";
QueryValidatorDistributionInfoResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "operator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "self_bond_rewards", kind: "message", T: coin_pb_js_1.DecCoin, repeated: true },
    { no: 3, name: "commission", kind: "message", T: coin_pb_js_1.DecCoin, repeated: true },
]);
/**
 * QueryValidatorOutstandingRewardsRequest is the request type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest
 */
class QueryValidatorOutstandingRewardsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validator_address defines the validator address to query for.
         *
         * @generated from field: string validator_address = 1;
         */
        this.validatorAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorOutstandingRewardsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorOutstandingRewardsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorOutstandingRewardsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorOutstandingRewardsRequest, a, b);
    }
}
exports.QueryValidatorOutstandingRewardsRequest = QueryValidatorOutstandingRewardsRequest;
QueryValidatorOutstandingRewardsRequest.runtime = protobuf_1.proto3;
QueryValidatorOutstandingRewardsRequest.typeName = "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest";
QueryValidatorOutstandingRewardsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryValidatorOutstandingRewardsResponse is the response type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse
 */
class QueryValidatorOutstandingRewardsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorOutstandingRewardsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorOutstandingRewardsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorOutstandingRewardsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorOutstandingRewardsResponse, a, b);
    }
}
exports.QueryValidatorOutstandingRewardsResponse = QueryValidatorOutstandingRewardsResponse;
QueryValidatorOutstandingRewardsResponse.runtime = protobuf_1.proto3;
QueryValidatorOutstandingRewardsResponse.typeName = "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse";
QueryValidatorOutstandingRewardsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "rewards", kind: "message", T: distribution_pb_js_1.ValidatorOutstandingRewards },
]);
/**
 * QueryValidatorCommissionRequest is the request type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorCommissionRequest
 */
class QueryValidatorCommissionRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validator_address defines the validator address to query for.
         *
         * @generated from field: string validator_address = 1;
         */
        this.validatorAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorCommissionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorCommissionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorCommissionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorCommissionRequest, a, b);
    }
}
exports.QueryValidatorCommissionRequest = QueryValidatorCommissionRequest;
QueryValidatorCommissionRequest.runtime = protobuf_1.proto3;
QueryValidatorCommissionRequest.typeName = "cosmos.distribution.v1beta1.QueryValidatorCommissionRequest";
QueryValidatorCommissionRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryValidatorCommissionResponse is the response type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorCommissionResponse
 */
class QueryValidatorCommissionResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorCommissionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorCommissionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorCommissionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorCommissionResponse, a, b);
    }
}
exports.QueryValidatorCommissionResponse = QueryValidatorCommissionResponse;
QueryValidatorCommissionResponse.runtime = protobuf_1.proto3;
QueryValidatorCommissionResponse.typeName = "cosmos.distribution.v1beta1.QueryValidatorCommissionResponse";
QueryValidatorCommissionResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "commission", kind: "message", T: distribution_pb_js_1.ValidatorAccumulatedCommission },
]);
/**
 * QueryValidatorSlashesRequest is the request type for the
 * Query/ValidatorSlashes RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorSlashesRequest
 */
class QueryValidatorSlashesRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validator_address defines the validator address to query for.
         *
         * @generated from field: string validator_address = 1;
         */
        this.validatorAddress = "";
        /**
         * starting_height defines the optional starting height to query the slashes.
         *
         * @generated from field: uint64 starting_height = 2;
         */
        this.startingHeight = protobuf_1.protoInt64.zero;
        /**
         * starting_height defines the optional ending height to query the slashes.
         *
         * @generated from field: uint64 ending_height = 3;
         */
        this.endingHeight = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorSlashesRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorSlashesRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorSlashesRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorSlashesRequest, a, b);
    }
}
exports.QueryValidatorSlashesRequest = QueryValidatorSlashesRequest;
QueryValidatorSlashesRequest.runtime = protobuf_1.proto3;
QueryValidatorSlashesRequest.typeName = "cosmos.distribution.v1beta1.QueryValidatorSlashesRequest";
QueryValidatorSlashesRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "starting_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "ending_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "pagination", kind: "message", T: pagination_pb_js_1.PageRequest },
]);
/**
 * QueryValidatorSlashesResponse is the response type for the
 * Query/ValidatorSlashes RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorSlashesResponse
 */
class QueryValidatorSlashesResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * slashes defines the slashes the validator received.
         *
         * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1;
         */
        this.slashes = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryValidatorSlashesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryValidatorSlashesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryValidatorSlashesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryValidatorSlashesResponse, a, b);
    }
}
exports.QueryValidatorSlashesResponse = QueryValidatorSlashesResponse;
QueryValidatorSlashesResponse.runtime = protobuf_1.proto3;
QueryValidatorSlashesResponse.typeName = "cosmos.distribution.v1beta1.QueryValidatorSlashesResponse";
QueryValidatorSlashesResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "slashes", kind: "message", T: distribution_pb_js_1.ValidatorSlashEvent, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: pagination_pb_js_1.PageResponse },
]);
/**
 * QueryDelegationRewardsRequest is the request type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationRewardsRequest
 */
class QueryDelegationRewardsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_address defines the delegator address to query for.
         *
         * @generated from field: string delegator_address = 1;
         */
        this.delegatorAddress = "";
        /**
         * validator_address defines the validator address to query for.
         *
         * @generated from field: string validator_address = 2;
         */
        this.validatorAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegationRewardsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegationRewardsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegationRewardsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegationRewardsRequest, a, b);
    }
}
exports.QueryDelegationRewardsRequest = QueryDelegationRewardsRequest;
QueryDelegationRewardsRequest.runtime = protobuf_1.proto3;
QueryDelegationRewardsRequest.typeName = "cosmos.distribution.v1beta1.QueryDelegationRewardsRequest";
QueryDelegationRewardsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryDelegationRewardsResponse is the response type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationRewardsResponse
 */
class QueryDelegationRewardsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * rewards defines the rewards accrued by a delegation.
         *
         * @generated from field: repeated cosmos.base.v1beta1.DecCoin rewards = 1;
         */
        this.rewards = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegationRewardsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegationRewardsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegationRewardsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegationRewardsResponse, a, b);
    }
}
exports.QueryDelegationRewardsResponse = QueryDelegationRewardsResponse;
QueryDelegationRewardsResponse.runtime = protobuf_1.proto3;
QueryDelegationRewardsResponse.typeName = "cosmos.distribution.v1beta1.QueryDelegationRewardsResponse";
QueryDelegationRewardsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "rewards", kind: "message", T: coin_pb_js_1.DecCoin, repeated: true },
]);
/**
 * QueryDelegationTotalRewardsRequest is the request type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest
 */
class QueryDelegationTotalRewardsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_address defines the delegator address to query for.
         *
         * @generated from field: string delegator_address = 1;
         */
        this.delegatorAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegationTotalRewardsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegationTotalRewardsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegationTotalRewardsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegationTotalRewardsRequest, a, b);
    }
}
exports.QueryDelegationTotalRewardsRequest = QueryDelegationTotalRewardsRequest;
QueryDelegationTotalRewardsRequest.runtime = protobuf_1.proto3;
QueryDelegationTotalRewardsRequest.typeName = "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest";
QueryDelegationTotalRewardsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryDelegationTotalRewardsResponse is the response type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse
 */
class QueryDelegationTotalRewardsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * rewards defines all the rewards accrued by a delegator.
         *
         * @generated from field: repeated cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1;
         */
        this.rewards = [];
        /**
         * total defines the sum of all the rewards.
         *
         * @generated from field: repeated cosmos.base.v1beta1.DecCoin total = 2;
         */
        this.total = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegationTotalRewardsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegationTotalRewardsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegationTotalRewardsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegationTotalRewardsResponse, a, b);
    }
}
exports.QueryDelegationTotalRewardsResponse = QueryDelegationTotalRewardsResponse;
QueryDelegationTotalRewardsResponse.runtime = protobuf_1.proto3;
QueryDelegationTotalRewardsResponse.typeName = "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse";
QueryDelegationTotalRewardsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "rewards", kind: "message", T: distribution_pb_js_1.DelegationDelegatorReward, repeated: true },
    { no: 2, name: "total", kind: "message", T: coin_pb_js_1.DecCoin, repeated: true },
]);
/**
 * QueryDelegatorValidatorsRequest is the request type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest
 */
class QueryDelegatorValidatorsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_address defines the delegator address to query for.
         *
         * @generated from field: string delegator_address = 1;
         */
        this.delegatorAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorValidatorsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorValidatorsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorValidatorsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorValidatorsRequest, a, b);
    }
}
exports.QueryDelegatorValidatorsRequest = QueryDelegatorValidatorsRequest;
QueryDelegatorValidatorsRequest.runtime = protobuf_1.proto3;
QueryDelegatorValidatorsRequest.typeName = "cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest";
QueryDelegatorValidatorsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryDelegatorValidatorsResponse is the response type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse
 */
class QueryDelegatorValidatorsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * validators defines the validators a delegator is delegating for.
         *
         * @generated from field: repeated string validators = 1;
         */
        this.validators = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorValidatorsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorValidatorsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorValidatorsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorValidatorsResponse, a, b);
    }
}
exports.QueryDelegatorValidatorsResponse = QueryDelegatorValidatorsResponse;
QueryDelegatorValidatorsResponse.runtime = protobuf_1.proto3;
QueryDelegatorValidatorsResponse.typeName = "cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse";
QueryDelegatorValidatorsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "validators", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
]);
/**
 * QueryDelegatorWithdrawAddressRequest is the request type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest
 */
class QueryDelegatorWithdrawAddressRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * delegator_address defines the delegator address to query for.
         *
         * @generated from field: string delegator_address = 1;
         */
        this.delegatorAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorWithdrawAddressRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorWithdrawAddressRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorWithdrawAddressRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorWithdrawAddressRequest, a, b);
    }
}
exports.QueryDelegatorWithdrawAddressRequest = QueryDelegatorWithdrawAddressRequest;
QueryDelegatorWithdrawAddressRequest.runtime = protobuf_1.proto3;
QueryDelegatorWithdrawAddressRequest.typeName = "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest";
QueryDelegatorWithdrawAddressRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryDelegatorWithdrawAddressResponse is the response type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse
 */
class QueryDelegatorWithdrawAddressResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * withdraw_address defines the delegator address to query for.
         *
         * @generated from field: string withdraw_address = 1;
         */
        this.withdrawAddress = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryDelegatorWithdrawAddressResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryDelegatorWithdrawAddressResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryDelegatorWithdrawAddressResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryDelegatorWithdrawAddressResponse, a, b);
    }
}
exports.QueryDelegatorWithdrawAddressResponse = QueryDelegatorWithdrawAddressResponse;
QueryDelegatorWithdrawAddressResponse.runtime = protobuf_1.proto3;
QueryDelegatorWithdrawAddressResponse.typeName = "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse";
QueryDelegatorWithdrawAddressResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "withdraw_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC
 * method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryCommunityPoolRequest
 */
class QueryCommunityPoolRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCommunityPoolRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCommunityPoolRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCommunityPoolRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryCommunityPoolRequest, a, b);
    }
}
exports.QueryCommunityPoolRequest = QueryCommunityPoolRequest;
QueryCommunityPoolRequest.runtime = protobuf_1.proto3;
QueryCommunityPoolRequest.typeName = "cosmos.distribution.v1beta1.QueryCommunityPoolRequest";
QueryCommunityPoolRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * QueryCommunityPoolResponse is the response type for the Query/CommunityPool
 * RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryCommunityPoolResponse
 */
class QueryCommunityPoolResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * pool defines community pool's coins.
         *
         * @generated from field: repeated cosmos.base.v1beta1.DecCoin pool = 1;
         */
        this.pool = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCommunityPoolResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCommunityPoolResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCommunityPoolResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(QueryCommunityPoolResponse, a, b);
    }
}
exports.QueryCommunityPoolResponse = QueryCommunityPoolResponse;
QueryCommunityPoolResponse.runtime = protobuf_1.proto3;
QueryCommunityPoolResponse.typeName = "cosmos.distribution.v1beta1.QueryCommunityPoolResponse";
QueryCommunityPoolResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "pool", kind: "message", T: coin_pb_js_1.DecCoin, repeated: true },
]);
